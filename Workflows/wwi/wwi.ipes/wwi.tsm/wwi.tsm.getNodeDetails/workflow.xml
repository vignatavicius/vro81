<?xml version='1.0' encoding='UTF-8'?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item1" object-name="workflow:name=generic" id="bbacf8c7-d6b9-43d2-b65d-54abe0e67fc4" version="2.0.1" api-version="6.0.0" allowed-operations="evf" editor-version="1.6" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[wwi.tsm.getNodeDetails]]></display-name>
  <position y="50.0" x="100.0"/>
  <input>
    <param name="inNodeName" type="string">
      <description><![CDATA[<optional>Name of the TSM Node (otherwise all Nodes will be received)]]></description>
    </param>
    <param name="InAllowedTsmServers" type="Array/string">
      <description><![CDATA[<optonal>Allowed TSM Servers]]></description>
    </param>
  </input>
  <output>
    <param name="outNodeJson" type="string">
      <description><![CDATA[Die Nodes als JSON string]]></description>
    </param>
  </output>
  <attrib name="myNodeJson" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="myLoopCounter" type="number" read-only="false">
    <value encoded="n"><![CDATA[0.0]]></value>
    <description><![CDATA[Anzahl Schleifendurchläufe]]></description>
  </attrib>
  <attrib name="myLoopCommand" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
    <description><![CDATA[Befehl während des Schleifendurchlaufes]]></description>
  </attrib>
  <attrib name="myLoopServer" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
    <description><![CDATA[Name des TSM Servers während des Schleifendurchlaufes]]></description>
  </attrib>
  <attrib name="myLoopCommandResult" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
    <description><![CDATA[Ergebnis des Befehls während des Schleifendurchlaufes]]></description>
  </attrib>
  <attrib name="errorCode" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="myNodeServer" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
    <description><![CDATA[Server des aktuellen Nodes]]></description>
  </attrib>
  <attrib name="myNodeDomain" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
    <description><![CDATA[Domäne des aktuellen Nodes]]></description>
  </attrib>
  <attrib name="myNodeName" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
    <description><![CDATA[Name des aktuellen Nodes]]></description>
  </attrib>
  <attrib name="myNodeScheduleJSON" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
    <description><![CDATA[JSON mit allen schedules des aktuellen Nodes]]></description>
  </attrib>
  <workflow-item name="item1" out-name="item11" type="task" script-module="de.ww_informatik.tsm/getNode">
    <display-name><![CDATA[getNode]]></display-name>
    <script encoded="false"><![CDATA[//Auto generated script, cannot be modified !
actionResult = System.getModule("de.ww_informatik.tsm").getNode(nodeName,allowedServers,allowedDomains) ;]]></script>
    <in-binding>
      <bind name="nodeName" type="string" export-name="inNodeName">
        <description><![CDATA[<optional>Name of the TSM Node (otherwise all Nodes will be received)]]></description>
      </bind>
      <bind name="allowedServers" type="Array/string" export-name="InAllowedTsmServers"/>
      <bind name="allowedDomains" type="Array/string" export-name="NULL"/>
    </in-binding>
    <out-binding>
      <bind name="actionResult" type="string" export-name="myNodeJson"/>
    </out-binding>
    <description><![CDATA[Return all TSM-Server including Details (Request URL: /servers/<SERVERNAME>/details)]]></description>
    <position y="119.04545454545453" x="65.0"/>
  </workflow-item>
  <workflow-item name="item2" out-name="item4" type="custom-condition" alt-out-name="item7">
    <display-name><![CDATA[More nodes?]]></display-name>
    <script encoded="false"><![CDATA[if (myNodeJson && myLoopCounter < JSON.parse(myNodeJson).length) {
	return true;
}

return false;]]></script>
    <in-binding>
      <bind name="myNodeJson" type="string" export-name="myNodeJson"/>
      <bind name="myLoopCounter" type="number" export-name="myLoopCounter"/>
    </in-binding>
    <out-binding/>
    <position y="236.3181818181818" x="65.0"/>
  </workflow-item>
  <workflow-item name="item3" type="end" end-mode="0">
    <in-binding/>
    <position y="363.59090909090907" x="104.5"/>
  </workflow-item>
  <workflow-item name="item4" out-name="item5" catch-name="item0" throw-bind-name="errorCode" type="task">
    <display-name><![CDATA[Prepare Command]]></display-name>
    <script encoded="false"><![CDATA[var myNode = JSON.parse(myNodeJson)[myLoopCounter];

var myLoopCommand = "QUERY NODE " + myNode.NAME + " f=d";
var myLoopServer = myNode.SERVER;]]></script>
    <in-binding>
      <bind name="myNodeJson" type="string" export-name="myNodeJson"/>
      <bind name="myLoopCounter" type="number" export-name="myLoopCounter"/>
    </in-binding>
    <out-binding>
      <bind name="myLoopCommand" type="string" export-name="myLoopCommand"/>
      <bind name="myLoopServer" type="string" export-name="myLoopServer"/>
    </out-binding>
    <position y="246.3181818181818" x="204.5"/>
  </workflow-item>
  <workflow-item name="item5" out-name="item6" catch-name="item0" throw-bind-name="errorCode" type="task" script-module="de.ww_informatik.tsm/issueCommand">
    <display-name><![CDATA[issueCommand]]></display-name>
    <script encoded="false"><![CDATA[//Auto generated script, cannot be modified !
actionResult = System.getModule("de.ww_informatik.tsm").issueCommand(tsmServer,tsmCommand) ;]]></script>
    <in-binding>
      <bind name="tsmServer" type="string" export-name="myLoopServer"/>
      <bind name="tsmCommand" type="string" export-name="myLoopCommand"/>
    </in-binding>
    <out-binding>
      <bind name="actionResult" type="string" export-name="myLoopCommandResult"/>
    </out-binding>
    <description><![CDATA[Returns the Name of the Scheduler with the most free slots for the specified Server / Domain]]></description>
    <position y="246.3181818181818" x="344.5"/>
  </workflow-item>
  <workflow-item name="item0" prototype-id="increase-counter" out-name="item2" content-mode="x" type="task">
    <display-name><![CDATA[Increase counter]]></display-name>
    <script encoded="false"><![CDATA[//Auto-generated script
counter = counter+1;]]></script>
    <in-binding>
      <bind name="counter" type="number" export-name="myLoopCounter">
        <description><![CDATA[counter to increment]]></description>
      </bind>
    </in-binding>
    <out-binding>
      <bind name="counter" type="number" export-name="myLoopCounter">
        <description><![CDATA[counter incremented]]></description>
      </bind>
    </out-binding>
    <description><![CDATA[Increment a counter by one]]></description>
    <position y="309.95454545454544" x="204.5"/>
  </workflow-item>
  <workflow-item name="item6" out-name="item8" catch-name="item0" throw-bind-name="errorCode" type="task">
    <display-name><![CDATA[Parse content]]></display-name>
    <script encoded="false"><![CDATA[var myAllNodes = JSON.parse(myNodeJson);

if( myLoopCommandResult.substring(0,7) == "<error>" ) {
	throw "Failed to execute Command! Error: "+myCliCommandOutput;
}

var allCommandResults = JSON.parse(myLoopCommandResult.replace("'", ""));

if (allCommandResults[0] && allCommandResults[0][0] && allCommandResults[0][0].hdr) {
	for each ( var myAttribute in allCommandResults[0][0].hdr ) {
		myAllNodes[myLoopCounter][myAttribute.def] = allCommandResults[0][0].items[0][myAttribute.id];
	}	
	
	var myNodeJson = JSON.stringify(myAllNodes);
}

var myNodeDomain 	= myAllNodes[myLoopCounter].DOMAIN;
var myNodeServer 	= myAllNodes[myLoopCounter].SERVER;
var myNodeName		= myAllNodes[myLoopCounter].NAME;]]></script>
    <in-binding>
      <bind name="myNodeJson" type="string" export-name="myNodeJson"/>
      <bind name="myLoopCounter" type="number" export-name="myLoopCounter"/>
      <bind name="myLoopCommandResult" type="string" export-name="myLoopCommandResult"/>
    </in-binding>
    <out-binding>
      <bind name="myNodeJson" type="string" export-name="myNodeJson"/>
      <bind name="myNodeServer" type="string" export-name="myNodeServer"/>
      <bind name="myNodeDomain" type="string" export-name="myNodeDomain"/>
      <bind name="myNodeName" type="string" export-name="myNodeName"/>
    </out-binding>
    <position y="246.3181818181818" x="504.5"/>
  </workflow-item>
  <workflow-item name="item7" out-name="item3" type="task">
    <display-name><![CDATA[Map output]]></display-name>
    <script encoded="false"><![CDATA[var outNodeJson = myNodeJson;]]></script>
    <in-binding>
      <bind name="myNodeJson" type="string" export-name="myNodeJson"/>
    </in-binding>
    <out-binding>
      <bind name="outNodeJson" type="string" export-name="outNodeJson"/>
    </out-binding>
    <position y="309.95454545454544" x="65.0"/>
  </workflow-item>
  <workflow-item name="item8" out-name="item9" catch-name="item0" throw-bind-name="errorCode" type="task" script-module="de.ww_informatik.tsm/getNodeSchedules">
    <display-name><![CDATA[getNodeSchedules]]></display-name>
    <script encoded="false"><![CDATA[//Auto generated script, cannot be modified !
actionResult = System.getModule("de.ww_informatik.tsm").getNodeSchedules(domainName,serverName,clientName) ;]]></script>
    <in-binding>
      <bind name="domainName" type="string" export-name="myNodeDomain">
        <description><![CDATA[Name der TSM Domäne]]></description>
      </bind>
      <bind name="serverName" type="string" export-name="myNodeServer">
        <description><![CDATA[Name des TSM Servers]]></description>
      </bind>
      <bind name="clientName" type="string" export-name="myNodeName">
        <description><![CDATA[Name des TSM Nodes]]></description>
      </bind>
    </in-binding>
    <out-binding>
      <bind name="actionResult" type="string" export-name="myNodeScheduleJSON"/>
    </out-binding>
    <description><![CDATA[Verify if the specified Domain exists for the specified Server. Return true or false]]></description>
    <position y="309.95454545454544" x="505.0"/>
  </workflow-item>
  <workflow-item name="item9" out-name="item0" catch-name="item0" throw-bind-name="errorCode" type="task">
    <display-name><![CDATA[save schedules]]></display-name>
    <script encoded="false"><![CDATA[var myAllNodes = JSON.parse(myNodeJson);
var mySchedules = JSON.parse(myNodeScheduleJSON);

myAllNodes[myLoopCounter]["SCHEDULES"] = mySchedules.clientschedules;

var myNodeJson = JSON.stringify(myAllNodes);
]]></script>
    <in-binding>
      <bind name="myNodeJson" type="string" export-name="myNodeJson"/>
      <bind name="myLoopCounter" type="number" export-name="myLoopCounter"/>
      <bind name="myNodeScheduleJSON" type="string" export-name="myNodeScheduleJSON"/>
    </in-binding>
    <out-binding>
      <bind name="myNodeJson" type="string" export-name="myNodeJson"/>
    </out-binding>
    <position y="373.59090909090907" x="504.5"/>
  </workflow-item>
  <workflow-item name="item11" out-name="item2" type="task">
    <display-name><![CDATA[Make Array]]></display-name>
    <script encoded="false"><![CDATA[var myAllNodes = JSON.parse(myNodeJson);
if (myAllNodes) {
	if (!myAllNodes.length) {
		myAllNodes = [myAllNodes];
	}
}
else {
	myAllNodes = [];
}
var myNodeJson = JSON.stringify(myAllNodes);]]></script>
    <in-binding>
      <bind name="myNodeJson" type="string" export-name="myNodeJson"/>
    </in-binding>
    <out-binding>
      <bind name="myNodeJson" type="string" export-name="myNodeJson"/>
    </out-binding>
    <position y="182.68181818181816" x="65.0"/>
  </workflow-item>
  <presentation>
    <p-param name="inNodeName">
      <desc><![CDATA[<optional>Name of the TSM Node (otherwise all Nodes will be received)]]></desc>
    </p-param>
    <p-param name="InAllowedTsmServers">
      <desc><![CDATA[<optonal>Allowed TSM Servers]]></desc>
    </p-param>
  </presentation>
</workflow>